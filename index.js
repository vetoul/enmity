(()=>{function e(e){return e&&e.__esModule?e.default:e}function o(e,o,n){window.enmity.settings.set(e,o,n)}let{components:n}=window.enmity;n.Alert,n.Button,n.FlatList,n.Image,n.ImageBackground,n.KeyboardAvoidingView,n.Modal,n.Pressable,n.RefreshControl,n.ScrollView,n.SectionList,n.StatusBar,n.StyleSheet,n.Switch,n.Text,n.TextInput,n.TouchableHighlight,n.TouchableOpacity,n.TouchableWithoutFeedback,n.Touchable,n.View,n.VirtualizedList,n.Form,n.FormArrow,n.FormCTA,n.FormCTAButton,n.FormCardSection,n.FormCheckbox;let t=n.FormDivider;n.FormHint,n.FormIcon;let l=n.FormInput;n.FormLabel,n.FormRadio;let a=n.FormRow,m=n.FormSection;n.FormSelect,n.FormSubLabel;let r=n.FormSwitch;function i(...e){return window.enmity.modules.getByProps(...e)}n.FormTernaryCheckBox,n.FormText,n.FormTextColors,n.FormTextSizes,window.enmity.modules.common;let s=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;let c=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;let d=window.enmity.modules.common.Storage,g=window.enmity.modules.common.Toasts;window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings;let u=window.enmity.modules.common.Users;window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;let w=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;var h,y,b={};b=JSON.parse('{"name":"Message Logger","version":"3.5.15","build":"patch-1.0.14","description":"PLs work","authors":[{"name":"vet","id":"305188557843070977"}],"color":"#000000","sourceUrl":"https://raw.githubusercontent.com/vetoul/enmity/refs/heads/main/index.js"}');var _=function(){return(_=Object.assign||function(e){for(var o,n=1,t=arguments.length;n<t;n++)for(var l in o=arguments[n])Object.prototype.hasOwnProperty.call(o,l)&&(e[l]=o[l]);return e}).apply(this,arguments)};w.createThemedStyleSheet({icon:{color:s.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:s.ThemeColorMap.TEXT_MUTED}});var p=(h=/*@__PURE__*/e(b).name,window.enmity.patcher.create(h));y=_(_({},/*@__PURE__*/e(b)),{patches:[],onStart:function(){var o,n;try{null===(o=u.getCurrentUser())||void 0===o||o.id,d.getItem("NoDeleteLogs").then(function(e){null==e&&d.setItem("NoDeleteLogs","[]")}).catch(function(o){console.log("[".concat(/*@__PURE__*/e(b).name," Storage Error]"),o)});var t=i("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue"),l=i("getMessage","getMessages");i("getChannel","getDMFromUserId");var a=null===(n=t._actionHandlers._orderedActionHandlers)||void 0===n?void 0:n.MESSAGE_DELETE.find(function(e){return"MessageStore"===e.name});p.before(a,"actionHandler",function(e,o){var n=l.getMessage(o[0].channelId,o[0].id);if(n&&n.content){var a=_(_({},n),{content:'<span style="color:red;">[Deleted] '.concat(n.content,"</span>")});t.dispatch({type:"MESSAGE_UPDATE",message:a}),d.getItem("NoDeleteLogs").then(function(e){var o=JSON.parse(e);o.push({author:n.author.username,content:n.content,timestamp:n.timestamp}),d.setItem("NoDeleteLogs",JSON.stringify(o))})}}),console.log("[".concat(/*@__PURE__*/e(b).name,"] Plugin started successfully."))}catch(o){console.log("[".concat(/*@__PURE__*/e(b).name," Plugin Error]"),o)}},onStop:function(){try{p.unpatchAll(),console.log("[".concat(/*@__PURE__*/e(b).name,"] Plugin stopped."))}catch(o){console.log("[".concat(/*@__PURE__*/e(b).name," Plugin Stop Error]"),o)}},getSettingsPanel:function(e){var n=e.settings;return c.createElement(m,{title:"Plugin Settings"},c.createElement(a,{label:"Log bot messages",subLabel:"Whether or not bot message events should be logged",trailing:c.createElement(r,{value:n.getBoolean("_nodelete_logBots",!1),onValueChange:function(){try{n.toggle("_nodelete_logBots",!1),o("_nodelete","_logBots",n.getBoolean("_nodelete_logBots",!1)),g.open({content:"Log bot messages has been ".concat(n.getBoolean("_nodelete_logBots",!1)?"enabled":"disabled",".")})}catch(e){console.log("[ NoDelete Toggle Error ]",e),g.open({content:"An error occurred. Check debug logs for more info."})}}})}),c.createElement(t,null),c.createElement(a,{label:"Log my own messages",subLabel:"Whether or not your own edits and deleted messages will be logged",trailing:c.createElement(r,{value:n.getBoolean("_nodelete_logSelf",!1),onValueChange:function(){try{n.toggle("_nodelete_logSelf",!1),o("_nodelete","_logSelf",n.getBoolean("_nodelete_logSelf",!1)),g.open({content:"Log my own messages has been ".concat(n.getBoolean("_nodelete_logSelf",!1)?"enabled":"disabled",".")})}catch(e){console.log("[ NoDelete Toggle Error ]",e),g.open({content:"An error occurred. Check debug logs for more info."})}}})}),c.createElement(t,null),c.createElement(a,{label:"Only log to Storage",subLabel:"Message logs will not show in chat, only in Storage",trailing:c.createElement(r,{value:n.getBoolean("_nodelete",!1),onValueChange:function(){try{n.toggle("_nodelete",!1),o("_nodelete","_storageLog",n.getBoolean("_nodelete",!1)),g.open({content:"Storage-only logging has been ".concat(n.getBoolean("_nodelete",!1)?"enabled":"disabled",".")})}catch(e){console.log("[ NoDelete Toggle Error ]",e),g.open({content:"An error occurred. Check debug logs for more info."})}}})}),c.createElement(t,null),c.createElement(l,{value:n.getBoolean("_nodelete_maxLogs","1000"),onChange:function(e){return/^\d+$/.test(e)?o("_nodelete","maxLogs",e.trim()):o("_nodelete","maxLogs","1000")},title:"Max Logs to Store"}),c.createElement(a,{label:"Auto-clear logs",subLabel:"Message logs will automatically clear after they have exceeded your max logs limit",trailing:c.createElement(r,{value:n.getBoolean("_nodelete_autoClear",!1),onValueChange:function(){try{n.toggle("_nodelete_autoClear",!1),o("_nodelete","autoClear",n.getBoolean("_nodelete_autoClear",!1)),g.open({content:"Auto-clear logs has been ".concat(n.getBoolean("_nodelete_autoClear",!1)?"enabled":"disabled",".")})}catch(e){console.log("[ NoDelete Toggle Error ]",e),g.open({content:"An error occurred. Check debug logs for more info."})}}})}))}}),window.enmity.plugins.registerPlugin(y)})();
//# sourceMappingURL=index.js.map
