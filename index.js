(()=>{function e(e){return e&&e.__esModule?e.default:e}function o(e,o,n){window.enmity.settings.set(e,o,n)}let{components:n}=window.enmity;n.Alert,n.Button,n.FlatList,n.Image,n.ImageBackground,n.KeyboardAvoidingView,n.Modal,n.Pressable,n.RefreshControl,n.ScrollView,n.SectionList,n.StatusBar,n.StyleSheet,n.Switch,n.Text,n.TextInput,n.TouchableHighlight,n.TouchableOpacity,n.TouchableWithoutFeedback,n.Touchable,n.View,n.VirtualizedList,n.Form,n.FormArrow,n.FormCTA,n.FormCTAButton,n.FormCardSection,n.FormCheckbox;let t=n.FormDivider;n.FormHint,n.FormIcon;let l=n.FormInput;n.FormLabel,n.FormRadio;let r=n.FormRow,a=n.FormSection;n.FormSelect,n.FormSubLabel;let m=n.FormSwitch;function i(...e){return window.enmity.modules.getByProps(...e)}n.FormTernaryCheckBox,n.FormText,n.FormTextColors,n.FormTextSizes,window.enmity.modules.common,window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;let s=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;let c=window.enmity.modules.common.Toasts;window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings;let d=window.enmity.modules.common.Users;window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;var g,u,w={};w=JSON.parse('{"name":"Message Logger","version":"3.5.15","build":"patch-1.0.14","description":"PLs work","authors":[{"name":"vet","id":"305188557843070977"}],"color":"#000000","sourceUrl":"https://raw.githubusercontent.com/vetoul/enmity/refs/heads/main/index.js"}');var y=function(){return(y=Object.assign||function(e){for(var o,n=1,t=arguments.length;n<t;n++)for(var l in o=arguments[n])Object.prototype.hasOwnProperty.call(o,l)&&(e[l]=o[l]);return e}).apply(this,arguments)},h=(g=/*@__PURE__*/e(w).name,window.enmity.patcher.create(g)),_={},b=function(e){var o;return null!==(o=_[e])&&void 0!==o?o:null},f=function(e,o){_[e]=o};u=y(y({},/*@__PURE__*/e(w)),{onStart:function(){var o,n,t;try{if(!(null===(o=d.getCurrentUser())||void 0===o?void 0:o.id)){console.error("[".concat(/*@__PURE__*/e(w).name,"] Error: Current user not initialized."));return}console.log("[".concat(/*@__PURE__*/e(w).name,"] Using in-memory storage."));var l=i("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue"),r=i("getMessage","getMessages"),a=i("getChannel","getDMFromUserId");if(!l||!r||!a){console.error("[".concat(/*@__PURE__*/e(w).name,"] Error: Necessary modules not found."));return}console.log("[".concat(/*@__PURE__*/e(w).name,"] _actionHandlers structure: "),l._actionHandlers);var m=null===(t=null===(n=l._actionHandlers)||void 0===n?void 0:n._orderedActionHandlers)||void 0===t?void 0:t.MESSAGE_DELETE;if(m){var s=m.find(function(e){return"MessageStore"===e.name});s?h.before(s,"actionHandler",function(o,n){var t=r.getMessage(n[0].channelId,n[0].id);if(t&&t.content){var a=y(y({},t),{content:'<span style="color:red;">[Deleted] '.concat(t.content,"</span>")});l.dispatch({type:"MESSAGE_UPDATE",message:a});var m=b("NoDeleteLogs");m||(m=[]),m.push({author:t.author.username,content:t.content,timestamp:t.timestamp}),f("NoDeleteLogs",m),console.log("[".concat(/*@__PURE__*/e(w).name,"] Deleted message preserved."))}}):console.error("[".concat(/*@__PURE__*/e(w).name,"] Error: MessageStore handler not found."))}else console.error("[".concat(/*@__PURE__*/e(w).name,"] Error: MESSAGE_DELETE handlers not found."));console.log("[".concat(/*@__PURE__*/e(w).name,"] Plugin started successfully."))}catch(o){console.error("[".concat(/*@__PURE__*/e(w).name,"] Plugin Error: ").concat(o.message))}},onStop:function(){try{h.unpatchAll(),console.log("[".concat(/*@__PURE__*/e(w).name,"] Plugin stopped."))}catch(o){console.error("[".concat(/*@__PURE__*/e(w).name,"] Plugin Stop Error: ").concat(o.message))}},getSettingsPanel:function(e){var n=e.settings;return s.createElement(a,{title:"Plugin Settings"},s.createElement(r,{label:"Log bot messages",subLabel:"Whether or not bot message events should be logged",trailing:s.createElement(m,{value:n.getBoolean("_nodelete_logBots",!1),onValueChange:function(){try{n.toggle("_nodelete_logBots",!1),o("_nodelete","_logBots",n.getBoolean("_nodelete_logBots",!1)),c.open({content:"Log bot messages has been ".concat(n.getBoolean("_nodelete_logBots",!1)?"enabled":"disabled",".")})}catch(e){console.error("[ NoDelete Toggle Error ]",e),c.open({content:"An error occurred. Check debug logs for more info."})}}})}),s.createElement(t,null),s.createElement(r,{label:"Log my own messages",subLabel:"Whether or not your own edits and deleted messages will be logged",trailing:s.createElement(m,{value:n.getBoolean("_nodelete_logSelf",!1),onValueChange:function(){try{n.toggle("_nodelete_logSelf",!1),o("_nodelete","_logSelf",n.getBoolean("_nodelete_logSelf",!1)),c.open({content:"Log my own messages has been ".concat(n.getBoolean("_nodelete_logSelf",!1)?"enabled":"disabled",".")})}catch(e){console.error("[ NoDelete Toggle Error ]",e),c.open({content:"An error occurred. Check debug logs for more info."})}}})}),s.createElement(t,null),s.createElement(r,{label:"Only log to Storage",subLabel:"Message logs will not show in chat, only in Storage",trailing:s.createElement(m,{value:n.getBoolean("_nodelete",!1),onValueChange:function(){try{n.toggle("_nodelete",!1),o("_nodelete","_storageLog",n.getBoolean("_nodelete",!1)),c.open({content:"Storage-only logging has been ".concat(n.getBoolean("_nodelete",!1)?"enabled":"disabled",".")})}catch(e){console.error("[ NoDelete Toggle Error ]",e),c.open({content:"An error occurred. Check debug logs for more info."})}}})}),s.createElement(t,null),s.createElement(l,{value:n.getBoolean("_nodelete_maxLogs","1000"),onChange:function(e){return/^\d+$/.test(e)?o("_nodelete","maxLogs",e.trim()):o("_nodelete","maxLogs","1000")},title:"Max Logs to Store"}),s.createElement(r,{label:"Auto-clear logs",subLabel:"Message logs will automatically clear after they have exceeded your max logs limit",trailing:s.createElement(m,{value:n.getBoolean("_nodelete_autoClear",!1),onValueChange:function(){try{n.toggle("_nodelete_autoClear",!1),o("_nodelete","autoClear",n.getBoolean("_nodelete_autoClear",!1)),c.open({content:"Auto-clear logs has been ".concat(n.getBoolean("_nodelete_autoClear",!1)?"enabled":"disabled",".")})}catch(e){console.error("[ NoDelete Toggle Error ]",e),c.open({content:"An error occurred. Check debug logs for more info."})}}})}))}}),window.enmity.plugins.registerPlugin(u)})();
//# sourceMappingURL=index.js.map
